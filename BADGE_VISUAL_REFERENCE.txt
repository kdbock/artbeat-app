╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║                    🔴 APP BADGE NOTIFICATION SYSTEM 🔴                       ║
║                                                                              ║
║                              VISUAL REFERENCE GUIDE                         ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


┌──────────────────────────────────────────────────────────────────────────────┐
│                            HOME SCREEN BEHAVIOR                             │
└──────────────────────────────────────────────────────────────────────────────┘

BEFORE: App icon with no badge
  ┌─────────┐
  │         │
  │   📱    │  ← Your ArtBeat app icon
  │         │
  └─────────┘

AFTER: Message received (app closed/backgrounded)
  ┌─────────┐
  │    🔴   │  ← Red badge appears!
  │   📱    │
  │         │
  └─────────┘

WITH COUNT: Multiple messages received
  ┌─────────┐
  │  🔴(3)  │  ← Badge shows count
  │   📱    │
  │         │
  └─────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│                          INTEGRATION CHECKLIST                              │
└──────────────────────────────────────────────────────────────────────────────┘

STEP 1: Find your Messaging Screen ✓
  Location: lib/screens/messaging_screen.dart
            (or similar)

STEP 2: Add this to initState() ✓
  
  @override
  void initState() {
    super.initState();
    _clearBadgeWhenScreenOpens();  ← ADD THIS LINE
  }

  Future<void> _clearBadgeWhenScreenOpens() async {
    try {
      final chatService = Provider.of<ChatService>(context, listen: false);
      await chatService.onOpenMessaging();
    } catch (e) {
      print('Error: $e');
    }
  }

STEP 3: Done! ✓
  Badge system now active!


┌──────────────────────────────────────────────────────────────────────────────┐
│                            LIFECYCLE DIAGRAM                                │
└──────────────────────────────────────────────────────────────────────────────┘


         USER'S PERSPECTIVE              SYSTEM ACTIONS
         ─────────────────              ───────────────

              (Home Screen)
                   │
                   ├─ App is closed
                   │
                   ▼
              (Message arrives)
                   │
                   ├─ incrementBadgeCount()
                   ├─ Save to SharedPreferences
                   ├─ Update iOS badge
                   ├─ Update Android notification
                   │
                   ▼
            🔴 Badge shows "1"
                   │
                   ├─ User taps app
                   │
                   ▼
              (App opens)
                   │
                   ├─ Badge still visible
                   │
                   ▼
          (Navigate to Messages)
                   │
                   ├─ onMessagingScreenOpened()
                   ├─ clearBadge()
                   ├─ Mark as read
                   │
                   ▼
            🔴 Badge disappears
                   │
                   ├─ User exits messaging
                   │
                   ▼
              (Home Screen)
                   │
                   ├─ Badge gone
                   │
                   └─ App icon clean


┌──────────────────────────────────────────────────────────────────────────────┐
│                         BADGE BEHAVIOR EXAMPLES                             │
└──────────────────────────────────────────────────────────────────────────────┘

SCENARIO 1: First Message
  ┌──────────────────────────────────────────┐
  │ App Closed → Message arrives            │
  │ Badge: ✗ (none)    →    Badge: 🔴(1)   │
  └──────────────────────────────────────────┘

SCENARIO 2: Multiple Messages
  ┌──────────────────────────────────────────┐
  │ Badge: 🔴(1) → Message arrives          │
  │ Badge: 🔴(1)   →   Badge: 🔴(2)        │
  │ Badge: 🔴(2)   →   Badge: 🔴(3)        │
  └──────────────────────────────────────────┘

SCENARIO 3: Message Read
  ┌──────────────────────────────────────────┐
  │ Badge: 🔴(3) → User marks chat as read   │
  │ Badge: 🔴(3)    →    Badge: 🔴(2)      │
  └──────────────────────────────────────────┘

SCENARIO 4: Open Messaging Screen
  ┌──────────────────────────────────────────┐
  │ Badge: 🔴(2) → Open messaging screen    │
  │ Badge: 🔴(2)    →    Badge: ✗ (none)   │
  └──────────────────────────────────────────┘


┌──────────────────────────────────────────────────────────────────────────────┐
│                            CODE SNIPPET LOCATION                            │
└──────────────────────────────────────────────────────────────────────────────┘

MESSAGING SCREEN FILE
│
├─ initState() ← ADD YOUR CODE HERE
│
├─ build()
│
├─ Other methods...
│
└─ }


EXACT CODE TO ADD:

  @override
  void initState() {
    super.initState();
    _clearBadgeWhenScreenOpens();  ← ONE NEW LINE
  }

  Future<void> _clearBadgeWhenScreenOpens() async {  ← NEW METHOD
    try {
      final chatService = Provider.of<ChatService>(context, listen: false);
      await chatService.onOpenMessaging();
    } catch (e) {
      print('Error: $e');
    }
  }


┌──────────────────────────────────────────────────────────────────────────────┐
│                          FILES MODIFIED/CREATED                             │
└──────────────────────────────────────────────────────────────────────────────┘

MODIFIED FILES:
  ✅ /packages/artbeat_messaging/lib/src/services/notification_service.dart
     - Added: Badge management methods
     - Added: Badge persistence with SharedPreferences
     
  ✅ /packages/artbeat_messaging/lib/src/services/chat_service.dart
     - Enhanced: markChatAsRead() now updates badge
     - Added: onOpenMessaging() convenience method

CREATED DOCUMENTATION:
  📄 APP_BADGE_NOTIFICATION_SETUP.md
  📄 BADGE_NOTIFICATION_QUICK_START.md
  📄 BADGE_NOTIFICATION_CODE_EXAMPLES.dart
  📄 BADGE_IMPLEMENTATION_SUMMARY.md
  📄 BADGE_VISUAL_REFERENCE.txt (this file)


┌──────────────────────────────────────────────────────────────────────────────┐
│                           QUICK TEST PROCEDURE                              │
└──────────────────────────────────────────────────────────────────────────────┘

TEST 1: Single Message
  Step 1: Open ArtBeat app
  Step 2: Close app completely (go to home screen)
  Step 3: Send yourself a message from another device
  Step 4: Look at app icon on home screen
  ✓ EXPECTED: Red badge showing "1"
  Step 5: Open ArtBeat app
  ✓ EXPECTED: Badge still visible
  Step 6: Open messaging screen
  ✓ EXPECTED: Badge disappears

TEST 2: Multiple Messages
  Step 1: Close ArtBeat app
  Step 2: Send 3 messages while app is closed
  Step 3: Look at app icon
  ✓ EXPECTED: Badge shows "3"
  Step 4: Open app
  Step 5: Mark first chat as read
  ✓ EXPECTED: Badge now shows "2"
  Step 6: Open messaging screen
  ✓ EXPECTED: Badge disappears

TEST 3: Persistence
  Step 1: Receive a message (badge shows "1")
  Step 2: Force close the app (Settings > Apps > Force Stop)
  Step 3: Look at app icon
  ✓ EXPECTED: Badge still shows "1"
  Step 4: Open app again
  ✓ EXPECTED: Badge shows "1"
  Step 5: Open messaging screen
  ✓ EXPECTED: Badge disappears


┌──────────────────────────────────────────────────────────────────────────────┐
│                          PLATFORM SPECIFICS                                 │
└──────────────────────────────────────────────────────────────────────────────┘

iOS (iPhone):
  ✓ Badge appears on app icon in home screen
  ✓ Red circle with white number
  ✓ Auto-requested permission in initialize()
  ✓ Works iOS 10+
  Implementation: IOSFlutterLocalNotificationsPlugin.setBadgeNumber()

Android (Android Phone):
  ✓ Badge shows in notification tray
  ✓ Some launchers support icon badges (Pixel, Samsung)
  ✓ Others show in notification center
  ✓ Auto-requested permission in initialize()
  ✓ Works Android 5.0+
  Implementation: AndroidNotificationDetails.badge property


┌──────────────────────────────────────────────────────────────────────────────┐
│                          STORAGE INFORMATION                                │
└──────────────────────────────────────────────────────────────────────────────┘

WHERE BADGE COUNT IS STORED:
  Storage: SharedPreferences
  Key: "app_badge_count"
  Type: Integer
  Range: 0-999 (typical apps show "99+" above 99)
  Persistence: Survives app restart
  Auto-Reset: When app is uninstalled

FLOW:
  Badge count → SharedPreferences → Recovered after restart
  Message arrives → incrementBadgeCount()
                 → Save to SharedPreferences
                 → Update app icon
  App restarts → Read from SharedPreferences
              → Restore badge


┌──────────────────────────────────────────────────────────────────────────────┐
│                          TROUBLESHOOTING GUIDE                              │
└──────────────────────────────────────────────────────────────────────────────┘

BADGE NOT SHOWING?

iOS Issues:
  □ Check: Settings > YourApp > Notifications > Badge ON?
  □ Check: NotificationService.initialize() called?
  □ Try: Restart phone
  □ Try: Uninstall & reinstall app

Android Issues:
  □ Check: Settings > YourApp > Notifications ON?
  □ Check: Try different launcher (Samsung, Google Pixel)
  □ Try: Restart phone
  □ Try: Open Notification Center to verify badge data

BADGE NOT CLEARING?

  □ Check: onOpenMessaging() called in messaging screen?
  □ Check: Are you in the RIGHT screen (where messages show)?
  □ Check: No duplicate onOpenMessaging() calls?
  □ Try: Uninstall & reinstall to reset SharedPreferences

BADGE COUNT WRONG?

  □ Check: Multiple calls to increment for same message?
  □ Check: markChatAsRead() being called?
  □ Check: Only one initState() for messaging screen?
  □ Try: Check logs for badge operation messages (📲 emoji)


┌──────────────────────────────────────────────────────────────────────────────┐
│                            QUICK REFERENCE                                  │
└──────────────────────────────────────────────────────────────────────────────┘

MOST USED METHOD:
  await chatService.onOpenMessaging();  ← Call in messaging screen's initState()

GET BADGE COUNT:
  final count = await notificationService.getBadgeCount();

MANUAL BADGE CONTROL:
  await notificationService.incrementBadgeCount();   // +1
  await notificationService.decrementBadgeCount();   // -1
  await notificationService.setBadgeCount(5);        // Set to 5
  await notificationService.clearBadge();            // Clear (0)

DISPLAY IN UI:
  StreamBuilder<int>(
    stream: notificationService.getUnreadMessageCount(),
    builder: (context, snapshot) {
      final count = snapshot.data ?? 0;
      return Text('$count');
    },
  )


┌──────────────────────────────────────────────────────────────────────────────┐
│                          SUCCESS INDICATORS                                 │
└──────────────────────────────────────────────────────────────────────────────┘

✅ SYSTEM IS WORKING IF YOU SEE:

  □ Red badge appears on app icon when message received
  □ Badge shows correct count (1, 2, 3, etc.)
  □ Badge persists after app restart
  □ Badge clears when messaging screen opens
  □ Badge decrements when marking chat as read
  □ Logs show: "📲 Badge incremented to X"
  □ Logs show: "📲 Badge cleared"
  □ No error logs with "Error" + "badge"


┌──────────────────────────────────────────────────────────────────────────────┐
│                           YOU'RE ALL SET! 🎉                                 │
└──────────────────────────────────────────────────────────────────────────────┘

WHAT YOU HAVE:
  ✅ Automatic badge increment on new messages
  ✅ Badge persists across app restarts
  ✅ Badge clears when opening messaging screen
  ✅ Works on iOS and Android
  ✅ Integrated with existing notification system
  ✅ No complex setup required

WHAT YOU NEED TO DO:
  1. Add 6 lines of code to your messaging screen
  2. Test with a real message
  3. Done!

YOUR ACTION ITEMS:
  [ ] 1. Open your messaging screen file
  [ ] 2. Find the initState() method
  [ ] 3. Add the badge clearing code
  [ ] 4. Test by sending a message
  [ ] 5. Verify badge appears and clears

NEED HELP?
  → See: BADGE_NOTIFICATION_QUICK_START.md
  → See: APP_BADGE_NOTIFICATION_SETUP.md
  → See: BADGE_NOTIFICATION_CODE_EXAMPLES.dart

═════════════════════════════════════════════════════════════════════════════════
                              Ready to ship! 🚀
═════════════════════════════════════════════════════════════════════════════════