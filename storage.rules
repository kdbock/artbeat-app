rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions for access control
    function isDebugMode() {
      // Set to true only if you want to completely bypass App Check
      // Better approach: Register debug tokens in Firebase Console
      return false;
    }

    function hasAppCheck() {
      return request.app != null || isDebugMode();
    }

    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }

    function isAuthorized() {
      return isAuthenticated() && hasAppCheck();
    }
    
    function isUserPath(userId) {
      return isAuthorized() && (
        isDebugMode() || 
        request.auth.uid == userId
      );
    }

    function isAdmin(userId) {
      return (exists(/databases/$(database)/documents/users/$(userId)) 
        && get(/databases/$(database)/documents/users/$(userId)).data.userType == 'admin');
    }

    // Base rules that apply to all paths
    match /{allPaths=**} {
      allow read: if isAuthenticated(); // Simplified for dev - just require auth
      allow write: if false; // Specific paths must explicitly allow write
    }

    // Temporary very permissive rule for debugging artist profile uploads
    match /profile/{allPaths=**} {
      allow read, write: if isAuthenticated();
    }

    // Temporary very permissive rule for debugging artwork uploads
    match /artwork/{allPaths=**} {
      allow read, write: if isAuthenticated();
    }

    // Temporary very permissive rule for debugging post uploads
    match /post_images/{allPaths=**} {
      allow read: if true; // Public read access for debugging
      allow write: if isAuthenticated();
    }

    // Root level files - for simple uploads during development
    match /{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Debug uploads path - optimized for reliable ad uploads
    // This path has proven most reliable for avoiding "cannot parse response" errors
    match /debug_uploads/{fileName} {
      allow read, write: if isAuthenticated();
      // Additional permissive rules for better reliability
      allow read, write: if request.auth != null;
    }
    
    // Debug uploads with subdirectories for better organization
    match /debug_uploads/{category}/{fileName} {
      allow read, write: if isAuthenticated();
    }

    // Artwork images - artists can upload their own artwork
    match /artwork_images/{userId}/{artworkId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Temporary more permissive artwork upload path for debugging
    match /artwork_images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Artwork images with subdirectory (e.g., artwork_images/userId/new/fileName)
    match /artwork_images/{userId}/{subDir}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Very permissive artwork path for development
    match /artwork_images/{allPaths=**} {
      allow read: if true; // Public read access for artwork images
      allow write: if isAuthenticated(); // More permissive for development
    }

    // Artwork path without 'images' suffix (legacy support)
    match /artwork/{userId}/{fileName} {
      allow read: if true; // Public read access for artwork
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Artwork path with subdirectories (legacy support)
    match /artwork/{allPaths=**} {
      allow read: if true; // Public read access for all artwork
      allow write: if isAuthenticated(); // More permissive for development
    }

    // Artwork videos - artists can upload their own artwork videos
    match /artwork_videos/{userId}/{artworkId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Temporary more permissive artwork video upload path for debugging
    match /artwork_videos/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Very permissive artwork video path for development
    match /artwork_videos/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
    }

    // Artwork audio - artists can upload their own artwork audio files
    match /artwork_audio/{userId}/{artworkId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Temporary more permissive artwork audio upload path for debugging
    match /artwork_audio/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Very permissive artwork audio path for development
    match /artwork_audio/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
    }

    // Artist images - for artist profiles (portfolio, banner, etc.)
    match /artist_images/{userId}/{type}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Capture images - allow authenticated users to upload to their own folder
    match /capture_images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin(request.auth.uid)
      );
      allow delete: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin(request.auth.uid)
      );
    }

    // Legacy captures path - for backward compatibility
    match /captures/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // Post images for community feed
    match /post_images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }
    
    // Post videos for community feed
    match /posts/{userId}/videos/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }
    
    // Post audio for community feed
    match /posts/{userId}/audio/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }
    
    // More permissive posts path for development (videos and audio)
    match /posts/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated();
    }
    
    // Profile images
    match /profile_images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Enhanced Storage Service paths for profile images (very permissive for development)
    match /profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated();
    }

    // Enhanced Storage Service paths for profile thumbnails
    match /profile/thumbnails/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated();
    }

    // Enhanced Storage Service paths for artwork images (used for cover images)
    match /artwork/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated();
    }

    // Enhanced Storage Service paths for artwork thumbnails
    match /artwork/thumbnails/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated();
    }

    // Feedback images - for developer feedback system
    match /feedback_images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Public art images - for art walk public art submissions
    match /public_art_images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Event images - for event creation (headshots, banners, event images)
    match /events/{userId}/{eventId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Event images - more permissive path for development
    match /events/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Art Walk images - allow authenticated users to upload to their own folder
    match /art_walk_images/{userId}/{artWalkId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
      allow delete: if isAuthenticated() && (isDebugMode() || request.auth.uid == userId);
    }

    // Art Walk related paths
    match /art_walks/{walkId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (
        // Check if user is the owner of the art walk or an admin
        request.auth.uid == request.resource.metadata.userId || 
        isAdmin(request.auth.uid)
      );
      allow delete: if isAuthenticated() && (
        request.auth.uid == resource.metadata.userId ||
        isAdmin(request.auth.uid)
      );
    }

    // Art Walk debug uploads (for development)
    match /art_walks_debug/{walkId}/{fileName} {
      allow read, write: if isAuthenticated() && isDebugMode();
    }

    // Enhanced storage paths for simplified uploads
    match /temp_uploads/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Simple uploads path for development and testing
    match /uploads/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Ad images - for advertisement uploads
    match /ads/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin(request.auth.uid)
      );
      allow delete: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin(request.auth.uid)
      );
    }

    // Admin ads - for admin-created advertisements
    match /admin_ads/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin(request.auth.uid);
      allow delete: if isAuthenticated() && isAdmin(request.auth.uid);
    }

    // Artist ads - for artist-created advertisements
    match /artist_ads/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // Gallery ads - for gallery-created advertisements
    match /gallery_ads/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // User ads - for regular user-created advertisements
    match /user_ads/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // Artist approved ads - special category for artist-approved advertisements
    match /artist_approved_ads/{subpath=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // More permissive ad uploads path for development
    match /ads/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // More permissive for development
      allow delete: if isAuthenticated();
    }

    // Chat images - for messaging system image uploads
    match /chat_images/{chatId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Chat participants can upload images
      allow delete: if isAuthenticated();
    }

    // Voice messages - for messaging system voice message uploads
    match /voice_messages/{chatId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Chat participants can upload voice messages
      allow delete: if isAuthenticated();
    }

    // Chat media - generic path for chat-related media
    match /chat_media/{chatId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Debug mode bypass for testing
    match /{path=**}/{fileName} {
      allow read, write: if isDebugMode();
    }
  }
}