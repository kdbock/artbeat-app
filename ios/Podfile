# Podfile for ARTbeat Flutter App
# Optimized for iOS 15+ and Xcode 16 (2025)

# Set minimum iOS deployment target to 15.0
platform :ios, '15.0'

# Suppress warnings about master specs repo
install! 'cocoapods', :warn_for_unused_master_specs_repo => false

# Disable CocoaPods analytics for faster builds
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Fix gRPC build issues
ENV['GRPC_NO_OPENSSL'] = '1'

# Configure project settings
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Disable OpenSSL in gRPC to avoid build issues
  pod 'gRPC-Core', :modular_headers => true

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Set minimum deployment target to iOS 15.0
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      
      # Disable bitcode (deprecated in Xcode 14+)
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Enable module stability for better compatibility
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      
      # Optimize for Xcode 16
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      
      # Set modern Swift version
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # Optimize build settings for modern Xcode
      config.build_settings['VALIDATE_WORKSPACE'] = 'YES'
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES' if config.name == 'Debug'
      
      # Code signing settings for modern Xcode
      config.build_settings['CODE_SIGN_IDENTITY'] = 'Apple Development'
      config.build_settings['DEVELOPMENT_TEAM'] = ''
      
      # Global preprocessor definitions for all targets
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'COCOAPODS=1'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'PERMISSION_LOCATION=1'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'PERMISSION_CAMERA=1'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'PERMISSION_PHOTOS=1'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'Firebase_VERSION=11.10.0'
      
      # Fix for leveldb-library compilation issues with Xcode 16
      if target.name == 'leveldb-library'
        config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
        config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_TARGET_SRCROOT}'
        config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_TARGET_SRCROOT}/include'
        config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_TARGET_SRCROOT}/port'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'c11'
        # Add preprocessor definitions to fix port namespace issues
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'LEVELDB_PLATFORM_POSIX=1'
        config.build_settings['OTHER_CFLAGS'] ||= ['$(inherited)']
        config.build_settings['OTHER_CFLAGS'] << '-DLEVELDB_PLATFORM_POSIX=1'
      end
      
      # Fix for gRPC-Core OpenSSL issues
      if target.name.start_with?('gRPC')
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_CRONET_WITH_PACKET_COALESCING=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_IOS_EVENT_ENGINE_CLIENT=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1'
        # Completely disable TLS session key logging
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_SSL_KEY_LOGGING_DISABLED=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_NO_SSL_KEY_LOGGING=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'TSI_NO_SSL_KEY_LOGGING=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_NO_TLS_SESSION_KEY_LOGGING=1'
        # Use BoringSSL instead of OpenSSL
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'OPENSSL_NO_ASM=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'COCOAPODS=1'
        config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_TARGET_SRCROOT)/third_party/boringssl-with-bazel/src/include'
      end
    end
  end
end
